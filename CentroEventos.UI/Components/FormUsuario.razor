@using CentroEventos.Aplicacion.Entidades;
@using CentroEventos.Aplicacion.Interfaces;
@using CentroEventos.Aplicacion.CasosDeUso;

@inject ListarUsuariosUseCase ListarUsuariosUseCase
@inject NavigationManager Navigation
@inject IniciarSesionUseCase IniciarSesionUseCase

@rendermode InteractiveServer

<div class="login-container">
@if (!string.IsNullOrEmpty(_mensajeError))
{
    <div class="overlay">
        <div class="modal-error">
            <p>@_mensajeError</p>
            <button class="btn btn-light" @onclick="() => _mensajeError = null">Aceptar</button>
        </div>
    </div>
}
    <div class="form-group">
        <label>Email</label>
        <input type="email" @bind="usuario.Email" class="form-control" placeholder="Ingrese su email" />
    </div>
    <div class="form-group">
        <label>Contraseña</label>
        <input type="password" @bind="usuario.Contraseña" class="form-control" placeholder="Ingrese su contraseña" />
    </div>
    <div class="form-buttons">
        <button class="btn-login"@onclick="() => IniciarSesion(usuario)">INICIAR SESIÓN</button>
        <button class="btn-register"@onclick="Registrarse">REGISTRARSE</button>
    </div>
</div>

<style>
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

.modal-error {
    background-color: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.25);
    text-align: center;
    max-width: 400px;
}

.modal-error p {
    color: #000000;
    font-weight: bold;
    margin-bottom: 20px;
    font-size: 1.1rem;
}

.modal-error button {
    padding: 10px 20px;
    font-size: 1rem;
    border-radius: 6px;
    border: none;
    background-color: #3498db;
    color: white;
    cursor: pointer;
}

.modal-error button:hover {
    background-color: #2980b9;
}
</style>

@code {
    private Usuario usuario = new Usuario();
     string _mensajeError = "";
    private void Registrarse()
    {
        Navigation.NavigateTo("/usuario/");
    }

    private void IniciarSesion(Usuario datosUsuario){

      var listaUsuarios = ListarUsuariosUseCase.Ejecutar();
      string hashIngresado = SHA_256.ObtenerSHA256(datosUsuario.Contraseña);

      var usuarioEncontrado = listaUsuarios.FirstOrDefault(u => u.Email == datosUsuario.Email && u.Contraseña.Equals(hashIngresado, StringComparison.Ordinal));
      if (usuarioEncontrado != null) {
        IniciarSesionUseCase.Ejecutar(usuarioEncontrado);
        Navigation.NavigateTo("/listadoUsuarios");
      }
      else {
        _mensajeError = "Email o contraseña incorrectos. Intente nuevamente.";
      }
      
    }

}
