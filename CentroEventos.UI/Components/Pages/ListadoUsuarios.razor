@page "/listadoUsuarios"
<PageTitle>Listado de usuarios</PageTitle>

@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject UsuarioBajaUseCase UsuarioBajaUseCase
@inject ListarUsuariosUseCase ListarUsuariosUseCase

<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar" />

<div class="contenedor-tabla">
@if (!string.IsNullOrEmpty(_mensajeError))
{
    <div class="overlay">
        <div class="modal-error">
            <p>@_mensajeError</p>
            <button class="btn btn-light" @onclick="() => _mensajeError = null">Aceptar</button>
        </div>
    </div>
}
    <h2 class="titulo-tabla">Listado de usuarios</h2>

    <table class="table tabla-estilo">
        <thead>
            <tr>
                 <th>ID DEL USUARIO</th>
                 <th>NOMBRE</th>
                 <th>APELLIDO</th>
                 <th>EMAIL</th>
                 <th>CONTRASEÑA</th>
                 <th>PERMISOS</th>
                 <th>ACCIÓN</th>
            </tr>
       </thead>
    <tbody>
        @foreach (var usuario in listaUsuarios)
        {
               <tr>
                    <td>@usuario.Id</td>
                    <td>@usuario.Nombre</td>
                    <td>@usuario.Apellido</td>
                    <td>@usuario.Email</td>
                    <td>@usuario.Contraseña</td>
                    <td>
                    @foreach (var permiso in usuario.Permisos)
                    {
                    @permiso.ToString()<br />
                    } 
                   </td>
                    <td>
                        <div class="botones-accion">
                            <button class="btn btn-primary" @onclick="() => Modificar(usuario)">Editar</button>
                            <button class="btn btn-danger" @onclick="() => ConfirmarEliminacion(usuario)">Eliminar</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .contenedor-tabla {
        max-width: 90%;
        margin: 30px auto;
        padding: 20px;
        background-color: #fefefe;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .titulo-tabla {
        text-align: center;
        margin-bottom: 20px;
    }

    .tabla-estilo th,
    .tabla-estilo td {
        padding: 12px 16px;
        text-align: center;
        vertical-align: middle;
    }

    .tabla-estilo th {
        background-color: #f0f0f0;
    }

    .botones-accion {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .btn {
        min-width: 90px;
    }
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

.modal-error {
    background-color: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.25);
    text-align: center;
    max-width: 400px;
}

.modal-error p {
    color: #000000;
    font-weight: bold;
    margin-bottom: 20px;
    font-size: 1.1rem;
}

.modal-error button {
    padding: 10px 20px;
    font-size: 1rem;
    border-radius: 6px;
    border: none;
    background-color: #3498db;
    color: white;
    cursor: pointer;
}

.modal-error button:hover {
    background-color: #2980b9;
}
</style>

@code {
    List<Usuario> listaUsuarios = new List<Usuario>();

    string _mensajeError = "";

    protected override void OnInitialized()
    {
        listaUsuarios = ListarUsuariosUseCase.Ejecutar();
    }

    DialogoConfirmacion dialogo = null!;
    Usuario? _usuarioParaEliminar = null;

    private void ConfirmarEliminacion(Usuario usuario)
    {
        _usuarioParaEliminar = usuario;
        dialogo.Mensaje = $"¿Desea eliminar el usuario {usuario.Nombre} {usuario.Apellido}?";
        dialogo.Mostrar();
    }

    private void Eliminar()
    {
      try
      {
        if (_usuarioParaEliminar != null)
        {
            UsuarioBajaUseCase.Ejecutar(_usuarioParaEliminar.Id, 1);
            Navegador.NavigateTo("/listadoUsuarios", forceLoad: true);
        }
      }
      catch (Exception ex)
      {
        _mensajeError = ex.Message;
      }
    }

    void Modificar(Usuario usuario)
    {
        Navegador.NavigateTo($"/usuario/{usuario.Id}");
    }
}

